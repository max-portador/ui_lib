name: listing, testing, building
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  groups: "pages"
  cancel-in-progress: true
jobs:
  build-and-testing:
    runs-on: ubuntu-latest
    concurrency: ci-{{ github.ref }}
    environment:
      name: github-pages
      url: $${{ steps.deployment.output.page_url }}
    strategy:
      matrix:
        node-version: [ 17.x ]
        steps:
          - uses: actions/checkout@v2
          - name: Starting Node.js ${{ matrix.node-version }}
            uses: actions/setup-node@v1
            with:
              node-version: ${{ matrix.node-version }}
          - name: install modules
            run: npm ci
          - name: build production project
            run: npm run build:prod
            if: always()
          - name: build storybook
            run: npm run sb:build
            if: always()
          - name: screenshot testing
            run: npm run test:ui:ci
            if: always()
          - name: Generate HTML report
            run: npm run test:ui:report
            if: always()
          - name: Setup Pages
            uses: actions/configure-pages@v2
            if: always()
          - name: Upload artifacts
            uses: actions/upload-pages-artifact@v1
            if: always()
            with:
              path: '.loki'
          - name: Deploy to Github Pages
            id: deployment
            if: always()
            uses: actions/deploy-pages@v1
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]

    steps:
      - uses: actions/checkout@v2
      - name: Starting Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci
      - name: linting typescript
        run: npm run lint:ts
        if: always()
      - name: linting css
        run: npm run lint:scss
        if: always()
      - name: unit testing
        run: npm run test:unit
        if: always()


#jobs:
#  pipeline:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [ 17.x ]
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Starting Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: install modules
#        run: npm ci
#      - name: build storybook
#        if: always()
#        run: npm run sb:build
#      - name: screenshot testing
#        run: npm run test:ui:ci
#      - name: build production project
#        run: npm run build:prod
#      - name: linting typescript
#        if: always()
#        run: npm run lint:ts
#      - name: linting css
#        if: always()
#        run: npm run lint:scss
#      - name: unit testing
#        if: always()
#        run: npm run test:unit
