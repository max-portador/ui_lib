name: listing, testing, building
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  pipeline:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]

    steps:
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list


      - name: Starting Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci
      - name: build storybook
        if: always()
        run: npm run sb:build
      - name: screenshot testing
        run: npm run test:ui:ci
      - name: build production project
        run: npm run build:prod
      - name: linting typescript
        if: always()
        run: npm run lint:ts
      - name: linting css
        if: always()
        run: npm run lint:scss
      - name: unit testing
        if: always()
        run: npm run test:unit


